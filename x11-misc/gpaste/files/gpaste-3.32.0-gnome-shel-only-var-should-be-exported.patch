From 1eaed802448e5262cc4d3d7b9b95a408ff89494c Mon Sep 17 00:00:00 2001
From: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
Date: Sun, 17 Mar 2019 14:20:10 +0100
Subject: [PATCH] gnome-shel: only var should be exported

Fixes part of #268

Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
---
 src/gnome-shell/aboutItem.js        | 2 +-
 src/gnome-shell/deleteButton.js     | 2 +-
 src/gnome-shell/deleteItemPart.js   | 2 +-
 src/gnome-shell/dummyHistoryItem.js | 2 +-
 src/gnome-shell/emptyHistoryItem.js | 2 +-
 src/gnome-shell/item.js             | 2 +-
 src/gnome-shell/pageItem.js         | 2 +-
 src/gnome-shell/pageSwitcher.js     | 2 +-
 src/gnome-shell/searchItem.js       | 2 +-
 src/gnome-shell/stateSwitch.js      | 2 +-
 src/gnome-shell/statusIcon.js       | 2 +-
 src/gnome-shell/uiItem.js           | 2 +-
 12 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/gnome-shell/aboutItem.js b/src/gnome-shell/aboutItem.js
index b4a7ff86..6c7bd972 100644
--- a/src/gnome-shell/aboutItem.js
+++ b/src/gnome-shell/aboutItem.js
@@ -6,7 +6,7 @@
 
 const { St } = imports.gi;
 
-class GPasteAboutItem {
+var GPasteAboutItem = class {
     constructor(client, menu) {
         this.actor = new St.Button({
             reactive: true,
diff --git a/src/gnome-shell/deleteButton.js b/src/gnome-shell/deleteButton.js
index 93816a1a..3de6160e 100644
--- a/src/gnome-shell/deleteButton.js
+++ b/src/gnome-shell/deleteButton.js
@@ -6,7 +6,7 @@
 
 const { Clutter, St } = imports.gi;
 
-class GPasteDeleteButton {
+var GPasteDeleteButton = class {
     constructor(client, index) {
         this.actor = new St.Button();
 
diff --git a/src/gnome-shell/deleteItemPart.js b/src/gnome-shell/deleteItemPart.js
index 0b87abaf..b5a5add3 100644
--- a/src/gnome-shell/deleteItemPart.js
+++ b/src/gnome-shell/deleteItemPart.js
@@ -11,7 +11,7 @@ const Me = ExtensionUtils.getCurrentExtension();
 
 const DeleteButton = Me.imports.deleteButton;
 
-class GPasteDeleteItemPart {
+var GPasteDeleteItemPart = class {
     constructor(client, index) {
         this.actor = new St.Bin({ x_align: St.Align.END });
         this._deleteButton = new DeleteButton.GPasteDeleteButton(client, index);
diff --git a/src/gnome-shell/dummyHistoryItem.js b/src/gnome-shell/dummyHistoryItem.js
index 8d227fc9..38f3ea4f 100644
--- a/src/gnome-shell/dummyHistoryItem.js
+++ b/src/gnome-shell/dummyHistoryItem.js
@@ -10,7 +10,7 @@ const PopupMenu = imports.ui.popupMenu;
 
 const _ = Gettext.domain('GPaste').gettext;
 
-class GPasteDummyHistoryItem extends PopupMenu.PopupMenuItem {
+var GPasteDummyHistoryItem = class extends PopupMenu.PopupMenuItem {
     constructor() {
         super(_("(Couldn't connect to GPaste daemon)"));
         this.setSensitive(false);
diff --git a/src/gnome-shell/emptyHistoryItem.js b/src/gnome-shell/emptyHistoryItem.js
index 94c3df61..35bdb0c4 100644
--- a/src/gnome-shell/emptyHistoryItem.js
+++ b/src/gnome-shell/emptyHistoryItem.js
@@ -6,7 +6,7 @@
 
 const { GLib, GPaste, St } = imports.gi;
 
-class GPasteEmptyHistoryItem {
+var GPasteEmptyHistoryItem = class {
     constructor(client, settings, menu) {
         this.actor = new St.Button({
             reactive: true,
diff --git a/src/gnome-shell/item.js b/src/gnome-shell/item.js
index 99db6662..e04b8a90 100644
--- a/src/gnome-shell/item.js
+++ b/src/gnome-shell/item.js
@@ -13,7 +13,7 @@ const Me = ExtensionUtils.getCurrentExtension();
 
 const DeleteItemPart = Me.imports.deleteItemPart;
 
-class GPasteItem extends PopupMenu.PopupMenuItem {
+var GPasteItem = class extends PopupMenu.PopupMenuItem {
     constructor(client, size, index) {
         super("");
 
diff --git a/src/gnome-shell/pageItem.js b/src/gnome-shell/pageItem.js
index ca0dde3e..1606016e 100644
--- a/src/gnome-shell/pageItem.js
+++ b/src/gnome-shell/pageItem.js
@@ -8,7 +8,7 @@ const { St } = imports.gi;
 
 const Signals = imports.signals;
 
-class GPastePageItem {
+var GPastePageItem = class {
     constructor(page) {
         this.actor = new St.Button({
             reactive: true,
diff --git a/src/gnome-shell/pageSwitcher.js b/src/gnome-shell/pageSwitcher.js
index 59e5c3a8..f6d09aeb 100644
--- a/src/gnome-shell/pageSwitcher.js
+++ b/src/gnome-shell/pageSwitcher.js
@@ -15,7 +15,7 @@ const PageItem = Me.imports.pageItem;
 
 const MAX_PAGES = 20;
 
-class GPastePageSwitcher extends PopupMenu.PopupBaseMenuItem {
+var GPastePageSwitcher = class extends PopupMenu.PopupBaseMenuItem {
     constructor() {
         super({
             reactive: false,
diff --git a/src/gnome-shell/searchItem.js b/src/gnome-shell/searchItem.js
index 2ec35f5d..9c3daa21 100644
--- a/src/gnome-shell/searchItem.js
+++ b/src/gnome-shell/searchItem.js
@@ -8,7 +8,7 @@ const PopupMenu = imports.ui.popupMenu;
 
 const { St } = imports.gi;
 
-class GPasteSearchItem extends PopupMenu.PopupBaseMenuItem {
+var GPasteSearchItem = class extends PopupMenu.PopupBaseMenuItem {
     constructor() {
         super({
             activate: false,
diff --git a/src/gnome-shell/stateSwitch.js b/src/gnome-shell/stateSwitch.js
index cd3fdba6..00a3d0f9 100644
--- a/src/gnome-shell/stateSwitch.js
+++ b/src/gnome-shell/stateSwitch.js
@@ -10,7 +10,7 @@ const PopupMenu = imports.ui.popupMenu;
 
 const _ = Gettext.domain('GPaste').gettext;
 
-class GPasteStateSwitch extends PopupMenu.PopupSwitchMenuItem {
+var GPasteStateSwitch = class extends PopupMenu.PopupSwitchMenuItem {
     constructor(client) {
         super(_("Track changes"), client.is_active());
 
diff --git a/src/gnome-shell/statusIcon.js b/src/gnome-shell/statusIcon.js
index e2259fd6..c90a0978 100644
--- a/src/gnome-shell/statusIcon.js
+++ b/src/gnome-shell/statusIcon.js
@@ -8,7 +8,7 @@ const PopupMenu = imports.ui.popupMenu;
 
 const { St } = imports.gi;
 
-class GPasteStatusIcon {
+var GPasteStatusIcon = class {
     constructor() {
         this.actor = new St.BoxLayout({ style_class: 'panel-status-menu-box' });
 
diff --git a/src/gnome-shell/uiItem.js b/src/gnome-shell/uiItem.js
index fff0e621..6726cf82 100644
--- a/src/gnome-shell/uiItem.js
+++ b/src/gnome-shell/uiItem.js
@@ -6,7 +6,7 @@
 
 const { GPaste, St } = imports.gi;
 
-class GPasteUiItem {
+var GPasteUiItem = class {
     constructor(menu) {
         this.actor = new St.Button({
             reactive: true,
